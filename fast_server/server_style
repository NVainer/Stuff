#style

# install themes
sudo apt install -y xfce4-whiskermenu-plugin papirus-icon-theme arc-theme breeze-cursor-theme

# apply
xfconf-query -c xsettings -p /Net/ThemeName -s "Arc-Darker"
xfconf-query -c xsettings -p /Net/IconThemeName -s "Papirus-Dark"
xfconf-query -c xsettings -p /Gtk/CursorThemeName -s "Breeze"
xfconf-query -c xfwm4 -p /general/theme -s "Arc-Darker"

# apply whisker
xfce4-panel --add=whiskermenu || true
xfce4-panel -r

# hide panel 2
xfconf-query -c xfce4-panel -p /panels/panel-2/autohide-behavior -t int -s 2
xfconf-query -c xfce4-panel -p /panels/panel-2/disable-struts -t bool -s true
xfce4-panel -r

# top panel to bottom
xfconf-query -c xfce4-panel -p /panels/panel-1/mode -t int -s 0
xfconf-query -c xfce4-panel -p /panels/panel-1/position -s "p=10;x=0;y=0"

# auto icon size
xfconf-query -c xfce4-panel -p /panels/panel-1/icon-size -s 0 || \
xfconf-query -c xfce4-panel -p /panels/panel-1/icon-size -s -1

# set dark mode
xfconf-query -c xsettings -p /Net/ThemeName -s "Arc-Dark" \
  || xfconf-query -c xsettings -n -p /Net/ThemeName -t string -s "Arc-Dark"
xfconf-query -c xfwm4 -p /general/theme -s "Arc-Dark" \
  || xfconf-query -c xfwm4 -n -p /general/theme -t string -s "Arc-Dark"
gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark' 2>/dev/null || true

#change wallpaper
sudo curl -fsSL https://raw.githubusercontent.com/NVainer/Stuff/main/ClickNet_wallpaper.png \
  -o /usr/share/xfce4/backdrops/ClickNet_wallpaper.png
IMG="/usr/share/xfce4/backdrops/ClickNet_wallpaper.png"
for p in $(xfconf-query -c xfce4-desktop -l | grep -E '/(last-image|image-path)$'); do
  xfconf-query -c xfce4-desktop -p "$p" -s "$IMG"
done
for p in $(xfconf-query -c xfce4-desktop -l | grep '/image-style$'); do
  xfconf-query -c xfce4-desktop -p "$p" -s 5
done
xfdesktop --reload

#install brave
sudo curl -fsS https://dl.brave.com/install.sh | sudo bash




read -p "Install Zsh (better shell)? (y/n): " install_zsh
if [[ "${install_zsh,,}" == "y" ]]; then
  set -e
  TARGET_USER="${SUDO_USER:-$USER}"
  TARGET_HOME="$(getent passwd "$TARGET_USER" | cut -d: -f6)"
  ZSH_PATH="/usr/bin/zsh"

  echo "[*] Installing dependencies…"
  sudo apt update -y
  sudo apt install -y zsh git curl wget unzip

  echo "[*] Installing Oh My Zsh…"
  # Install for target user (not root) even if script runs with sudo
  sudo -u "$TARGET_USER" sh -c '
    export RUNZSH=no CHSH=no
    [ -d "$HOME/.oh-my-zsh" ] || sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
    [ -f "$HOME/.zshrc" ] || cp "$HOME/.oh-my-zsh/templates/zshrc.zsh-template" "$HOME/.zshrc"
  '

  echo "[*] Making Zsh default shell for $TARGET_USER…"
  command -v "$ZSH_PATH" >/dev/null || ZSH_PATH="$(command -v zsh)"
  sudo chsh -s "$ZSH_PATH" "$TARGET_USER"

  echo "[*] Installing Nerd Font (FiraCode)…"
  sudo -u "$TARGET_USER" bash -c '
    mkdir -p "$HOME/.local/share/fonts"
    tmpdir=$(mktemp -d)
    curl -fsSL -o "$tmpdir/FiraCode.zip" https://github.com/ryanoasis/nerd-fonts/releases/latest/download/FiraCode.zip
    unzip -o -q "$tmpdir/FiraCode.zip" -d "$HOME/.local/share/fonts"
    rm -rf "$tmpdir"
    fc-cache -f >/dev/null
  '

  echo "[*] Installing Powerlevel10k + plugins…"
  sudo -u "$TARGET_USER" bash -c '
    ZSH_CUSTOM="${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}"
    [ -d "$ZSH_CUSTOM/themes/powerlevel10k" ] || git clone --depth=1 https://github.com/romkatv/powerlevel10k.git "$ZSH_CUSTOM/themes/powerlevel10k"
    [ -d "$ZSH_CUSTOM/plugins/zsh-autosuggestions" ] || git clone https://github.com/zsh-users/zsh-autosuggestions "$ZSH_CUSTOM/plugins/zsh-autosuggestions"
    [ -d "$ZSH_CUSTOM/plugins/zsh-syntax-highlighting" ] || git clone https://github.com/zsh-users/zsh-syntax-highlighting.git "$ZSH_CUSTOM/plugins/zsh-syntax-highlighting"

    # Update ~/.zshrc safely
    ZRC="$HOME/.zshrc"
    grep -q "^ZSH_THEME=" "$ZRC" && sed -i "s|^ZSH_THEME=.*|ZSH_THEME=\"powerlevel10k/powerlevel10k\"|" "$ZRC" \
      || echo "ZSH_THEME=\"powerlevel10k/powerlevel10k\"" >> "$ZRC"

    if grep -q "^plugins=" "$ZRC"; then
      sed -i "s|^plugins=.*|plugins=(git zsh-autosuggestions zsh-syntax-highlighting)|" "$ZRC"
    else
      echo "plugins=(git zsh-autosuggestions zsh-syntax-highlighting)" >> "$ZRC"
    fi

    # Your p10k config
    curl -fsSL https://raw.githubusercontent.com/NVainer/fast_ubuntu/refs/heads/main/my_p10k.zsh -o "$HOME/.p10k.zsh" || true
    grep -q "POWERLEVEL9K_DISABLE_CONFIGURATION_WIZARD" "$ZRC" || echo "POWERLEVEL9K_DISABLE_CONFIGURATION_WIZARD=true" >> "$ZRC"
    grep -q "\.p10k.zsh" "$ZRC" || echo "[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh" >> "$ZRC"
  '

  echo "[✓] Zsh installed. Re-open terminal or run: sudo -u \"$TARGET_USER\" $ZSH_PATH"
fi



